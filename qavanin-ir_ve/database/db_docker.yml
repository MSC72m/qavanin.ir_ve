# Start from the official PostgreSQL image
FROM postgres:15

# Set default environment variables (can be overridden at runtime)
ENV POSTGRES_DB=your_database_name
ENV POSTGRES_USER=your_username
ENV POSTGRES_PASSWORD=your_password

# Install build dependencies and other necessary packages
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    postgresql-server-dev-15 \
    python3-pip \
    python3-dev \
    libpq-dev

# Install pgvector
RUN git clone https://github.com/pgvector/pgvector.git \
    && cd pgvector \
    && make \
    && make install

# Install any Python packages you might need
# RUN pip3 install psycopg2-binary sqlalchemy numpy

# Clean up
RUN apt-get remove -y build-essential git postgresql-server-dev-15 \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /pgvector

# Add pgvector to shared_preload_libraries
RUN echo "shared_preload_libraries = 'vector'" >> /usr/share/postgresql/postgresql.conf.sample

# Create a script to initialize the database with only the necessary extensions
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL\n\
    CREATE EXTENSION IF NOT EXISTS vector;\n\
EOSQL' > /docker-entrypoint-initdb.d/init-pgvector.sh

# Make the script executable
RUN chmod +x /docker-entrypoint-initdb.d/init-pgvector.sh

# Set the working directory
WORKDIR /app

# Expose the PostgreSQL port
EXPOSE 5432

# Add a healthcheck
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1